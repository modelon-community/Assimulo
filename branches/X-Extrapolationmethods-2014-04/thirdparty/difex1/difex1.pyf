!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module difex1__user__routines 
    interface difex1_user_interface 
        subroutine fcn(n,t,y,dz) ! in :difex1:difex1.f:difex1:unknown_interface
            integer, check(len(y)>=n),depend(y),intent(hide) :: n=len(y)
            double precision ,intent(in) :: t
            double precision dimension(n) ,intent(in) :: y
            double precision dimension(n) ,intent(out) :: dz
        end subroutine fcn
    end interface difex1_user_interface
end python module difex1__user__routines
python module difex1 ! in 
    interface  ! in :difex1
        subroutine difex1(n,fcn,t,y,tend,tol,hmax,h,kflag) ! in :difex1:difex1.f
            use difex1__user__routines
            integer,  optional,check(len(y)>=n),depend(y),intent(hide) :: n=len(y)
            external,intent(in) :: fcn
            double precision ,intent(in,out):: t
            double precision dimension(n),intent(in,out) :: y
            double precision,intent(in) :: tend
            double precision ,intent(in):: tol
            double precision,intent(in) :: hmax
            double precision,intent(in,out) :: h
            integer,intent(in,out) :: kflag
            integer :: nfcn
            integer :: nstep
            integer :: naccpt
            integer :: nrejct
            integer :: ndec
            integer :: nsol
            common /statp/ nfcn,nstep,naccpt,nrejct,ndec,nsol
        end subroutine difex1
        subroutine d1seq(m,nj) ! in :difex1:difex1.f
            integer, optional,check(len(nj)>=m),depend(nj) :: m=len(nj)
            integer dimension(m) :: nj
        end subroutine d1seq
        subroutine d1scal(mode,y,n,yold,ywgt,ymax,threl,thabs) ! in :difex1:difex1.f
            character*8 :: mode
            double precision dimension(n) :: y
            integer, optional,check(len(y)>=n),depend(y) :: n=len(y)
            double precision dimension(n),depend(n) :: yold
            double precision dimension(n),depend(n) :: ywgt
            double precision dimension(n),depend(n) :: ymax
            double precision :: threl
            double precision :: thabs
        end subroutine d1scal
        function d1errn(y,n,ywgt) ! in :difex1:difex1.f
            double precision dimension(n) :: y
            integer, optional,check(len(y)>=n),depend(y) :: n=len(y)
            double precision dimension(n),depend(n) :: ywgt
            double precision :: d1errn
        end function d1errn
    end interface 
end python module difex1

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
